{"mappings":"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","sources":["js/main.js"],"sourcesContent":["const rows = 18;\nconst columns = 18;\nconst padding = 50;\nconst cell_size = 35;\n\nlet bgColorR = 255; \nlet bgColorG = 204;\nlet bgColorB =  0;\n\nlet cellR = 0;\nlet cellG = 0;\nlet cellB = 0;\n\nconst cell_count = rows * columns;\nconst index = 0;\n\nlet cells = [];\n\nfunction setup() {\n    var cnv = createCanvas(720, 720);\n    var x = (windowWidth - width) / 2;\n    var y = (windowHeight - height) / 2;\n    cnv.position(x, y);\n\n    for(let col=0; col < columns; col++){\n        for(let row=0; row< rows; row++){\n\n            let left = padding+(col*cell_size);\n            let top = padding+(row*cell_size);\n            let size_real = cell_size - 2;\n\n            cells.push(new Cell(left, top, size_real, size_real));\n        }\n    }\n}\n\n\n\nfunction draw() {\n    background(bgColorR, bgColorG, bgColorB);\n    noStroke();\n    color(cellR, cellG, cellB);\n\n    for(let i = 0; i < cell_count; i++){\n        cells[i].display();\n    }\n\n    if(mouseIsPressed){\n        // text('Disco!', 20, 20);\n        for(let i = 0; i < cell_count; i++){\n            cells[i].display();\n            cells[i].randomColor();\n        }\n    }\n\n}\n\nclass Cell {\n    constructor(left, top, size_x, size_y, cell_color) {\n        this.left = left;\n        this.top = top;\n        this.x = size_x;\n        this.y = size_y;\n    }\n\n    display() {\n        fill(cellR, cellG, cellB);\n        rect(this.left, this.top, this.x, this.y);\n    }\n\n    randomColor() {\n        cellR = int(random(255));\n        cellG = int(random(255));\n        cellB = int(random(255));\n    }\n\n    // flicker() {\n    //     let choices = [0, 1];\n    //     let i = random(choices);\n    //     if(i == 0){\n    //         fill('white')\n            \n    //     }\n    //     else {\n    //         fill('black')\n    //     }\n    // }\n\n\n\n    // cellFill(color) {\n    //     let colorReal = \"'\" + color + \"'\"\n    //     fill(colorReal)\n    //     console.log(colorReal)\n    // }\n}\n\n// function rCells() {\n//     for(let i = 0; i < cell_count; i++){\n//         cells[i].display();\n//     }\n// }\n\n// function crazyCells() {\n//     for(let i = 0; i < cell_count; i++){\n//         cells[i].display();\n//         cells[i].flicker();\n//     }\n// }\n\n"],"names":[],"version":3,"file":"index.72be8890.js.map","sourceRoot":"/__parcel_source_root/"}